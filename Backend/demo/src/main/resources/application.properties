
# Application name
spring.application.name=CIRS

# -------------------------
# MySQL (relational data) settings
# -------------------------
# Database name used: `cirs_db` (created automatically by MySQL user or create beforehand)
# NOTE: I assumed the MySQL username is `root`. If your DB user is different, replace `spring.datasource.username` accordingly.
spring.datasource.username=root
spring.datasource.password=Qwerty@012
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL server connection (we'll create/drop the database named by app.db.name)
app.mysql.host=127.0.0.1
app.mysql.port=3306
app.db.name=cirsdb

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Debug logging for MongoDB operations
logging.level.org.springframework.data.mongodb=DEBUG
logging.level.com.mongodb=DEBUG
logging.level.org.mongodb.driver=INFO

# MongoDB specific settings
spring.data.mongodb.auto-index-creation=true

# MongoDB configuration for GridFS
# The MongoDB Atlas SRV URI is commented out to avoid startup failure when DNS/Network
# resolution or Atlas access is not available locally. Uncomment and set the URI
# when Atlas credentials and network access are confirmed.
spring.data.mongodb.uri=mongodb+srv://Arnob_mondal_mongodb:YirdpmX4UHdMlFgu@cluster0.mdggaou.mongodb.net/cirsdb?retryWrites=true&w=majority
spring.data.mongodb.database=cirsdb

# File upload settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Enable bean override in case of conflicts
spring.main.allow-bean-definition-overriding=true

# Enable MongoDB debug logging
logging.level.org.springframework.data.mongodb=DEBUG
logging.level.com.mongodb=DEBUG

# Examples / notes for remote connections
# 1) Direct connection to a remote device (replace placeholders):
#    spring.data.mongodb.uri=mongodb://<mongoUser>:<mongoPass>@192.0.2.10:27017/cirs_images?authSource=admin
#    - Ensure the MongoDB server's `bindIp` in `mongod.conf` includes the server's network interface (or 0.0.0.0) so it accepts external connections.
#    - Open/forward TCP port 27017 on the server's firewall / router.
#    - Use `authSource=admin` if the user was created in the admin database.
#
# 2) When using MongoDB Atlas SRV connection strings:
#    spring.data.mongodb.uri=mongodb+srv://Arnob_mondal_mongodb:YirdpmX4UHdMlFgu@cluster0.mdggaou.mongodb.net/?appName=Cluster0
#
# 3) How to set the environment variable on Windows PowerShell before running the app:
#    $env:MONGODB_URI = 'mongodb://user:pass@192.0.2.10:27017/cirs_images?authSource=admin'
#    .\mvnw.cmd spring-boot:run
#
# 4) Quick test from the client machine using mongosh (replace placeholders):
#    mongosh "mongodb://user:pass@192.0.2.10:27017/cirs_images?authSource=admin"

# Security notes:
# - Do NOT expose an unauthenticated MongoDB instance to the public internet.
# - If you must allow remote access, enable authentication, prefer TLS, and restrict accepted client IPs.

# -------------------------
# Static/templates
# -------------------------
# Thymeleaf Configuration
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true

# Static resources
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/static/**

# Optional: base path used when serving images via controller
app.images.base-url=/images
